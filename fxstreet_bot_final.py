import requests
from bs4 import BeautifulSoup
import time
import asyncio
from telegram import Bot
from http.server import BaseHTTPRequestHandler, HTTPServer
import threading

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TELEGRAM_BOT_TOKEN = "8374044886:AAHaI_LNKeW90A5sOYA_uzs5nfxVWBoM2us"
TELEGRAM_CHAT_ID = "-1002518445518"
MESSAGE_THREAD_ID = 15998
CHECK_INTERVAL = 60  # –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

bot = Bot(token=TELEGRAM_BOT_TOKEN)

# === –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ü–ê–ú–Ø–¢–¨ ===
last_link = None
first_run = True  # –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–∏–º –æ–¥–Ω—É –Ω–æ–≤–æ—Å—Ç—å

# === –°–ë–û–† –ù–û–í–û–°–¢–ï–ô ===
def get_news():
    url = "https://www.fxstreet.ru.com/news"
    headers = {"User-Agent": "Mozilla/5.0"}

    try:
        resp = requests.get(url, headers=headers, timeout=10)
        soup = BeautifulSoup(resp.text, "html.parser")

        news_items = soup.select("div.news-feed__item a")
        news = []

        for el in news_items:
            title = el.get_text(strip=True)
            href = el.get("href")

            if href and not href.startswith("http"):
                link = "https://www.fxstreet.ru.com" + href
            else:
                link = href

            if title and link:
                news.append((title, link))

        return news  # –°–ø–∏—Å–æ–∫ –æ—Ç –Ω–æ–≤–æ–π –∫ —Å—Ç–∞—Ä–æ–π
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:", e)
        return []

# === –û–¢–ü–†–ê–í–ö–ê –ù–û–í–û–°–¢–ï–ô ===
async def send_news(news_list):
    global last_link, first_run

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç —Å—Ç–∞—Ä–æ–π –∫ –Ω–æ–≤–æ–π (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –Ω–∞–æ–±–æ—Ä–æ—Ç)
    news_list = list(reversed(news_list))

    for title, link in news_list:
        if link == last_link:
            continue  # –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ

        msg = f"üì∞ <b>{title}</b>\n{link}"
        try:
            await bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=msg,
                parse_mode="HTML",
                message_thread_id=MESSAGE_THREAD_ID
            )
            last_link = link  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            await asyncio.sleep(1)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", e)

        if first_run:
            break  # –û—Ç–ø—Ä–∞–≤–∏–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ

    first_run = False

# === –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ ===
async def main():
    global last_link

    try:
        await bot.send_message(
            chat_id=TELEGRAM_CHAT_ID,
            text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ FXStreet",
            parse_mode="HTML",
            message_thread_id=MESSAGE_THREAD_ID
        )
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", e)

    while True:
        try:
            news = get_news()
            if news:
                await send_news(news)
            else:
                print("üîÑ –ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç.")
            await asyncio.sleep(CHECK_INTERVAL)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ:", e)
            await asyncio.sleep(30)

# === HTTP-–°–ï–†–í–ï–† –î–õ–Ø RENDER ===
class DummyHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b"Bot is running.")

    def do_HEAD(self):
        self.send_response(200)
        self.end_headers()

def run_http_server():
    server = HTTPServer(('0.0.0.0', 10000), DummyHandler)
    print("HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 10000")
    server.serve_forever()

# === –ó–ê–ü–£–°–ö ===
if __name__ == "__main__":
    threading.Thread(target=run_http_server).start()
    asyncio.run(main())
